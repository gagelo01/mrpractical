install("/home/gagelo01/workspace/Projects/2024/MR_nottingham/mrpractical")
library(devtools)
install("mrpractical")
install()
library(mrpractical)
usethis::use_data(my_pkg_data)
usethis::use_data(mrpractical)
bmi_file <- system.file("extdata", "inst.rda", package = "mrpractical")
bmi_file
library(mrpractical)
inst
data()
data("inst.rda", package = "mrpractical")
data(package = "mrpractical")
data(package = "mrpractical")
ao
data(package = "mrpractical")
outcome_gene
?attach()
attach(ao)
ao
# inst <- TwoSampleMR::extract_instruments(outcomes=id_exposure, p1 = 5e-8, clump = TRUE, r2 = 0.01, kb = 1e4)
read(inst, file = "mr_practical/data/inst.rda")
getwd()
setwd("/mnt/sda/gagelo01/Projects/2024/MR_nottingham/")
inst <- load("mr_practical/data/inst.rda")
setwd("/mnt/sda/gagelo01/Projects/2024/MR_nottingham/")
inst <- load("mrpractical/data/available_outcomes.rda")
inst <- load("mrpractical/data/inst.rda")
usethis::use_data(inst)
setwd("/mnt/sda/gagelo01/Projects/2024/MR_nottingham/mrpractical")
inst <- load("data/inst.rda")
usethis::use_data(inst)
usethis::use_data(inst, overwrite = TRUE)
outcome <- load("data/outcome.rda")
usethis::use_data(outcome, overwrite = TRUE)
outcome <- load("data/outcome.rda")
ao <- load("data/ao.rda")
ao <- load("data/available_outcomes.rda")
usethis::use_data(ao, overwrite = TRUE)
# hmgcr_ldl <- ieugwasr::associations(chrompos, id_exposure, proxies = 0)
# setDT(hmgcr_ldl)
hmgcr_ldl<- load("data/hmgcr_ldl.rda")
usethis::use_data(hmgcr_ldl, overwrite = TRUE)
hmgcr_ldl_clump<- load("data/hmgcr_ldl_clump.rda")
usethis::use_data(hmgcr_ldl_clump, overwrite = TRUE)
#outcome_gene <- TwoSampleMR::extract_outcome_data(snps = inst_gene$SNP, outcomes = id_outcome)
outcome_gene<- load("data/outcome_gene.rda")
usethis::use_data(outcome_gene, overwrite = TRUE)
library(devtools)
install()
library(mrpractical)
mrpractical::ao
ao
mrpractical::hmgcr_ldl
mrpractical::outcome
# ao <- ieugwasr::gwasinfo() #available outcomes
# setDT(ao)
ao <- load("data/available_outcomes.rda")
setwd("/mnt/sda/gagelo01/Projects/2024/MR_nottingham/mrpractical")
# ao <- ieugwasr::gwasinfo() #available outcomes
# setDT(ao)
ao <- load("data/available_outcomes.rda")
# ao <- ieugwasr::gwasinfo() #available outcomes
# setDT(ao)
ao <- load("data/ao.rda")
ao
ao <- ieugwasr::gwasinfo() #available outcomes
setDT(ao)
library(data.table)
ao
# ao <- ieugwasr::gwasinfo() #available outcomes
# setDT(ao)
# ao <- load("data/ao.rda")
usethis::use_data(ao, overwrite = TRUE)
ao <- load("data/ao.rda")
ao
# ao <- ieugwasr::gwasinfo() #available outcomes
# setDT(ao)
load("data/ao.rda")
inst <- TwoSampleMR::extract_instruments(outcomes=id_exposure, p1 = 5e-8, clump = TRUE, r2 = 0.01, kb = 1e4)
id_exposure <- ao[sex == "Males and Females" & grepl("ldl", tolower(trait)), ][which.max(sample_size), id]
id_outcome <- ao[sex == "Males and Females" & grepl("coronary artery", tolower(trait)), ][which.max(sample_size), id]
setDT(ao)
id_exposure <- ao[sex == "Males and Females" & grepl("ldl", tolower(trait)), ][which.max(sample_size), id]
id_outcome <- ao[sex == "Males and Females" & grepl("coronary artery", tolower(trait)), ][which.max(sample_size), id]
inst <- TwoSampleMR::extract_instruments(outcomes=id_exposure, p1 = 5e-8, clump = TRUE, r2 = 0.01, kb = 1e4)
inst
# inst <- TwoSampleMR::extract_instruments(outcomes=id_exposure, p1 = 5e-8, clump = TRUE, r2 = 0.01, kb = 1e4)
usethis::use_data(inst, overwrite = TRUE)
load("data/inst.rda")
inst
outcome <- TwoSampleMR::extract_outcome_data(snps = inst$SNP, outcomes = id_outcome)
outcome
usethis::use_data(outcome, overwrite = TRUE)
load("data/outcome.rda")
outcome
harm <- TwoSampleMR::harmonise_data(inst, outcome, 1)
res <- TwoSampleMR::mr(harm, method_list = c("mr_egger_regression", "mr_ivw", "mr_weighted_median", "mr_weighted_mode"))
scatter_plot <- TwoSampleMR::mr_scatter_plot(res, harm)
#make it prettier using ggplot2
scatter_plot[[1]] %>% class
library(magrittr)
library(dplyr)
library(ggplot2)
#make it prettier using ggplot2
scatter_plot[[1]] %>% class
theme_scatter <- theme(
legend.background = element_rect(fill = "white", linewidth = 4, colour = "white"),
axis.ticks = element_line(colour = "black", linewidth = 0.2),
panel.grid.minor = element_blank(),
legend.key=element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line.x.bottom = element_line(color = "black", size = 0.2),
axis.line.y.left   = element_line(color = "black", size = 0.2),
axis.line.y.right  = element_blank(),
axis.text.y.right  = element_blank(),
panel.border       = element_blank(),
legend.position = "top")
######Analysis using the HMGCR gene region#########
library(mygene)
k <- mygene::getGene("ENSG00000113161", fields = "genomic_pos_hg19")
window <- 1e5 #100KB
chrompos <- paste0(k[[1]]$genomic_pos_hg19$chr, ":", k[[1]]$genomic_pos_hg19$start-window, "-", k[[1]]$genomic_pos_hg19$end+window)
hmgcr_ldl <- ieugwasr::associations(chrompos, id_exposure, proxies = 0)
usethis::use_data(hmgcr_ldl, overwrite = TRUE)
hmgcr_ldl
load("data/hmgcr_ldl.rda")
data.table::setnames(hmgcr_ldl, "p", "pval")
hmgcr_ldl_clump <- ieugwasr::ld_clump(hmgcr_ldl[pval<5e-8,.(rsid, pval, id)], clump_r2 = 0.1, clump_p = 1, pop = "EUR")
setDT(hmgcr_ldl)
hmgcr_ldl_clump <- ieugwasr::ld_clump(hmgcr_ldl[pval<5e-8,.(rsid, pval, id)], clump_r2 = 0.1, clump_p = 1, pop = "EUR")
hmgcr_ldl_clump
